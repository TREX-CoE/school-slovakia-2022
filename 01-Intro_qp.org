#+TITLE: Introduction to Quantum Package

  Quantum Package (QP) is an open-source environment for developing
  easily quantum chemistry programs. It was initially designed for code
  developers, but it is relatively simple to use.

  Before doing anything with quantum package, the environment needs to
  be set up
  #+begin_src bash
source $QP_ROOT/quantum_package.rc
  #+end_src
  where =$QP_ROOT= is the path to the $qp2$ directory.

  An alternative, when using QP interactively is to run the QP shell:
  #+begin_src 
$QP_ROOT/bin/qpsh
  #+end_src

  QP stores input and output data in a database, called the /EZFIO directory/.
  To interact with the database, QP provides multiple shell functions,
  scripts and programs.

  Let us take an example to show how to use QP. First, we need to
  create a file with a geometry in =xyz= or =z-matrix= format. Let us
  take the water molecule, and write the coordinates in the file
  =h2o.xyz=:
  
   #+begin_src text :tangle h2o.xyz
3                                                                                            
Water
O       0.                     0.   0.
H      -0.756950272703377558   0.  -0.585882234512562827
H       0.756950272703377558   0.  -0.585882234512562827

   #+end_src

   We can now create an EZFIO database containing the geometry and the
   basis set parameters for the cc-pVDZ basis set:

   #+begin_src 
qp create_ezfio --basis=cc-pvdz h2o.xyz
   #+end_src

   A directory named =h2o.ezfio= has been created. When running
   interactively with qpsh, the current EZFIO database is displayed in
   the terminal. You should see =|h2o.ezfio>= in green before the
   command line. If you change directory, =|h2o.ezfio>= will become
   red, meaning that the EZFIO database in inaccessible. To change
   EZFIO database, use
   #+begin_src 
qp set_file other.ezfio
   #+end_src

   To get the documentation of the =qp= command, you can use
   #+begin_src bash
qp --help
   #+end_src

   Note: all QP commands come with a =--help= option for documentaion.

   To run a Hartree-Fock calculation, we will run the =scf= program of
   QP. To run a QP program, use =qp run=:

   #+begin_src 
qp run scf | tee h2o.scf.out
   #+end_src

   Here, we have copied the standard output into the file
   =h2o.scf.out= using the =tee= linux command.
   The Hartree-Fock orbitals are now stored inside the EZFIO
   database. If you run again the =scf= code, you will notice that the
   SCF will converge in a single iteration because it takes the MOs
   inside the database as an initial guess.

   Now we have a set of Hartree-Fock orbitals, we can run a CISD. But
   we don't want to include the single- and double-excitations from
   the $1s$ orbitals. For that, we need to run
   #+begin_src 
qp set_frozen_core
   #+end_src

   The output of this command tells that orbital 1 is labelled as
   =Core= and orbitals 2-24 are labelled as =Active=.
   We can now run the CISD
   #+begin_src 
qp run cisd | tee h2o.cisd.out
   #+end_src
   
   To modify the input parameters of the programs, you can use =qp edit=.
   This will open a temporary file with the editor defined by the
   =$EDITOR= environment variable, that you can modify to change the parameters.

   Alternatively, all the input parameters can be inspected using =qp
   get=, for example:
   #+begin_src 
qp get determinants n_det_max
   #+end_src
   and set using =qp set=
   #+begin_src 
qp set determinants n_det_max 2000
   #+end_src

   Note: You can use Tab-completion with the =qp= command, which makes
   the shell interaction more user-friendly.
   
  
* Geometry, Basis set, Pseudo-potential

** BFD Pseudopotential

   Store the pseudopotential parameters in a file named =PSEUDO=:
  #+begin_src text :tangle PSEUDO
H GEN 0 0
3
 1.000000000000 1 25.000000000000
25.000000000000 3 10.821821902641
-8.228005709676 2  9.368618758833

O GEN 2 1
3
6.00000000 1 9.29793903
55.78763416 3 8.86492204
-38.81978498 2 8.62925665
1
38.41914135 2 8.71924452

  #+end_src

** Double-Zeta basis set

   Store the basis set parameters in a file named =BASIS=:
  #+begin_src text :tangle BASIS
HYDROGEN
s 3
1 6.46417546   0.063649375945
2 1.13891461   0.339233210576
3 0.28003249   0.702654522063
s 1
1 0.05908405   1.00000000
p 1
1 0.51368060   1.00000000

OXYGEN
s 9
1 0.125346     0.055741
2 0.268022     0.304848
3 0.573098     0.453752
4 1.225429     0.295926
5 2.620277     0.019567
6 5.602818     -0.128627
7 11.980245     0.012024
8 25.616801     0.000407
9 54.775216     -0.000076
s 1
1 0.258551     1.000000
p 9
1 0.083598     0.044958
2 0.167017     0.150175
3 0.333673     0.255999
4 0.666627     0.281879
5 1.331816     0.242835
6 2.660761     0.161134
7 5.315785     0.082308
8 10.620108     0.039899
9 21.217318     0.004679
p 1
1 0.267865     1.000000
d 1
1 1.232753     1.000000

  #+end_src

* Hartree-Fock calculation
  
  Create EZFIO directory
#+begin_src bash
qp create_ezfio -p PSEUDO -b BASIS h2o.xyz -o h2o_hf
#+end_src

  Run SCF calculation

#+begin_src bash
qp run scf | tee h2o_hf.out
#+end_src

  Export the wave function into  TREXIO format
  
#+begin_src bash
qp set trexio trexio_file h2o_hf.trexio
qp run export_trexio
#+end_src

* DFT calculation
  
  Create EZFIO directory
#+begin_src bash
qp create_ezfio -p PSEUDO -b BASIS h2o.xyz -o h2o_dft
#+end_src

Choose PBE functional
#+begin_src  bash
qp set dft_keywords exchange_functional pbe
qp set dft_keywords correlation_functional pbe
qp set becke_numerical_grid grid_type_sgn 1
#+end_src

  Run Kohn-Sham calculation

#+begin_src bash
qp run ks_scf | tee h2o_dft.out
#+end_src

  Export the wave function into  TREXIO format
  
#+begin_src bash
qp set trexio trexio_file h2o_dft.trexio
qp run export_trexio
#+end_src

* QMC runs
  
First, we can compute with Quantum Package the energies of the
single-determinant wave functions with the 2 different set of MOs:

| HF MOs  | -16.950384201283956 |
| DFT MOs | -16.946588410898347 |
